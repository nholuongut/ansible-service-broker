---
# Install by default
apb_action: provision
cluster: "kubernetes"

# Indicates whether the ansible will be run by an operator deployed by OLM.
# In particular, OLM is responsible for installing CRDs in this case, not the
# broker's ansible.
olm_managed: false

# Broker configuration values
broker_name: ansible-service-broker
broker_namespace: openshift-ansible-service-broker
broker_deployment_name: asb
broker_service_name: asb
broker_route_name: asb-1338

dashboard_redirector_route_name: dr-1337

create_broker_namespace: false
wait_for_broker: false # By default, we do not wait for the broker to be available

# The image to use for the broker
broker_image_registry_url: docker.io
broker_image_registry_org: ansibleplaybookbundle
broker_image_tag: latest
broker_image: "{{ broker_image_registry_url }}/{{ broker_image_registry_org }}/origin-ansible-service-broker:{{ broker_image_tag }}"
broker_image_pull_policy: "IfNotPresent"
broker_probe_initial_delay: 120
broker_node_selector: ""

# The kind of broker, useful in the case the service-catalog
# supports namespaced service brokers
broker_kind: ClusterServiceBroker
# Whether or not the APB should destroy cluster level resources
# that are potentially shared by more than one broker in a cluster.
# Default behavior is to NOT delete these resources to prevent
# unintended breakages. Cluster admins can flip this to true and
# rerun deprovision in order to explicitly clean them up.
broker_destroy_shared_resources: False
# Deprovisioning a broker that has outstanding service instances or bindings
# will leak their underlying services as well as the k8s objects themselves.
# This effectively throws the related resources into what appears to be a
# perpetually terminating state that the cluster admin must clean up.
# By default, the broker's APB will refuse to deprovision a broker that is
# recognized to have outstanding instances, but switching
# broker_force_deprovision to true will deprovision the broker regardless
# of the presence of outstanding instances.
broker_force_deprovision: False
broker_clusterrole: admin # DEPRECATED: Leaving this here for backwards compat
broker_cluster_role: "{{ broker_clusterrole }}"
broker_sandbox_role: edit
# broker_user_auth_rule parameterizes the rule that the broker uses to perform
# SAR checks on the originating user's info, as passed from the service catalog.
# The user_auth_rule is dynamically provided to the broker via
# broker.user_auth_rule in its config map.
broker_user_auth_rule: "{{ broker_name }}-{{ broker_namespace }}-user-access"

# How does broker save state? crd | etcd
# TODO: Support etcd https://github.com/automationbroker/automation-broker-apb/issues/1
broker_dao_type: crd

# ETCD configuration (ignored unless dao_type is 'etcd')
etcd_image: quay.io/coreos/etcd:latest
etcd_path: /usr/local/bin/etcd
etcd_port: "2379"
etcd_persist_storage: "true"

# Whether or not to keep the sandbox namespace
broker_keep_namespace: "false"
broker_keep_namespace_on_error: "false"

# Special broker config options
broker_log_level: "debug"
broker_dev: "true"
broker_bootstrap_on_startup: "true"
broker_refresh_interval: "600s"
broker_launch_apb_on_bind: "false"
broker_output_request: "true"
broker_recovery: "true"
broker_auto_escalate: "false"
broker_client_secret: ""

# Basic auth configuration, disabled by default
broker_basic_auth_enabled: false
broker_basic_auth_username: "admin"
broker_basic_auth_password: "admin"

# Broker dockerhub registry options
broker_dockerhub_enabled: true
broker_dockerhub_name: dh
broker_dockerhub_url: https://registry.hub.docker.com
broker_dockerhub_org: ansibleplaybookbundle
broker_dockerhub_tag: latest
broker_dockerhub_white_list: [ ".*-apb$" ]
broker_dockerhub_black_list: [ ".*automation-broker-apb$" ]

# Broker local openshift registry options
broker_local_openshift_enabled: "{{ ('image.openshift.io' in lookup('k8s', cluster_info='api_groups')) | bool }}"
broker_local_openshift_name: localregistry
broker_local_openshift_namespaces: [ "openshift" ]
# NOTE TO ADMINS: The default whitelist policy here will pass *all* APBs
# found in the local openshift registry. If this is not desired,
# manipulate the following regex to only match APBs you wish to be made available.
broker_local_openshift_white_list: [ ".*" ]

# Broker helm registry options
broker_helm_enabled: false
broker_helm_name: stable
broker_helm_url: https://kubernetes-charts.storage.googleapis.com
broker_helm_runner: docker.io/automationbroker/helm-runner:latest
broker_helm_white_list: [ ".*" ]

# Broker galaxy registry options
broker_galaxy_enabled: false
broker_galaxy_name: galaxy
broker_galaxy_url: https://galaxy.ansible.com
broker_galaxy_org: ansibleplaybookbundle
broker_galaxy_runner: docker.io/ansibleplaybookbundle/apb-base:latest
broker_galaxy_white_list: [ ".*" ]

# Quay registry options
broker_quay_enabled: false
broker_quay_name: quay
broker_quay_url: https://quay.io
broker_quay_org: redhat
broker_quay_tag: latest
broker_quay_token: none
broker_quay_white_list: [ ".*-apb$" ]

dockerhub_registry:
  type: dockerhub
  name: '{{ broker_dockerhub_name }}'
  url: '{{ broker_dockerhub_url }}'
  org: '{{ broker_dockerhub_org | quote }}'
  tag: '{{ broker_dockerhub_tag | quote }}'
  white_list: '{{ broker_dockerhub_white_list }}'
  black_list: '{{ broker_dockerhub_black_list }}'

local_openshift_registry:
  type: local_openshift
  name: '{{ broker_local_openshift_name }}'
  namespaces: '{{ broker_local_openshift_namespaces }}'
  white_list: '{{ broker_local_openshift_white_list }}'

helm_registry:
  type: helm
  name: '{{ broker_helm_name }}'
  url: '{{ broker_helm_url }}'
  runner: '{{ broker_helm_runner }}'
  white_list: '{{ broker_helm_white_list }}'

galaxy_registry:
  type: galaxy
  name: '{{ broker_galaxy_name }}'
  url: '{{ broker_galaxy_url }}'
  org: '{{ broker_galaxy_org | quote }}'
  runner: '{{ broker_galaxy_runner }}'
  white_list: '{{ broker_galaxy_white_list }}'

quay_registry:
  type: quay
  name: '{{ broker_quay_name }}'
  url: '{{ broker_quay_url }}'
  org: '{{ broker_quay_org | quote }}'
  tag: '{{ broker_quay_tag | quote }}'
  token: '{{ broker_quay_token | quote }}'
  white_list: '{{ broker_quay_white_list }}'

# conditionally set later based on Cluster configuration
default_registries: []
