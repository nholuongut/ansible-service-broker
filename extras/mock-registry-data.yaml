apps:
  - id: 7f317094-45b7-47de-99cb-a8973840f4f3
    name: cloudfront-apb
    image: ansibleplaybookbundle/cloudfront-apb
    description: Content Delivery Network (CDN)
    tags:
      - amazon
      - networking
      - content-delivery
    bindable: true
    async: optional
    parameters: []
    metadata:
      displayName: "Amazon CloudFront"
      longDescription: "Amazon CloudFront is a global content delivery network (CDN) service that accelerates delivery of your websites, APIs, video content or other web assets. It integrates with other Amazon Web Services products to give developers and businesses an easy way to accelerate content to end users with no minimum usage commitments."
      imageUrl: "https://s3.amazonaws.com/fusor/2017demo/NetworkingContentDelivery_AmazonCloudFront.png"
      documentationUrl: "https://aws.amazon.com/cloudfront/"
  - id: 650fc7c3-12e3-4cce-b36c-2984e076768d
    name: elasticache-apb
    image: ansibleplaybookbundle/elasticache-apb
    description: Fully managed, in-memory data store and cache in the cloud. Compatible with Redis and Memcached.  Provides sub-millisecond latency to power real-time applications.
    tags:
      - amazon
      - database
    bindable: true
    async: optional
    parameters: []
    metadata:
      displayName: "Amazon ElastiCache"
      longDescription: "Amazon ElastiCache is a web service that makes it easy to deploy, operate, and scale an in-memory data store or cache in the cloud. The service improves the performance of web applications by allowing you to retrieve information from fast, managed, in-memory data stores, instead of relying entirely on slower disk-based databases."
      imageUrl: "https://s3.amazonaws.com/fusor/2017demo/Database_AmazonElasticCache.png"
      documentationUrl: "https://aws.amazon.com/elasticache/"
  - id: 4daf53ae-460d-4319-8698-212743a1a330
    name: elb-apb
    image: ansibleplaybookbundle/elb-apb
    description: Elastic Load Balancing
    tags:
      - amazon
      - networking
      - content-delivery
    bindable: true
    async: optional
    parameters: []
    metadata:
      displayName: "Amazon ELB"
      longDescription: "Elastic Load Balancing automatically distributes incoming application traffic across multiple Amazon EC2 instances. It enables you to achieve fault tolerance in your applications, seamlessly providing the required amount of load balancing capacity needed to route application traffic. Elastic Load Balancing offers two types of load balancers that both feature high availability, automatic scaling, and robust security. These include the Classic Load Balancer that routes traffic based on either application or network level information, and the Application Load Balancer that routes traffic based on advanced application level information that includes the content of the request. The Classic Load Balancer is ideal for simple load balancing of traffic across multiple EC2 instances, while the Application Load Balancer is ideal for applications needing advanced routing capabilities, microservices, and container-based architectures. Application Load Balancer offers ability to route traffic to multiple services or load balance across multiple ports on the same EC2 instance."
      imageUrl: "https://s3.amazonaws.com/fusor/2017demo/NetworkingContentDelivery_ElasticLoadBalancing.png"
      documentationUrl: "https://aws.amazon.com/elasticloadbalancing/"
  - id: c9f8f8e1-81ff-4825-ae26-94fb12696f20
    name: emr-apb
    image: ansibleplaybookbundle/emr-apb
    description: Easily Run and Scale Apache Hadoop, Spark, HBase, Presto, Hive, and other Big Data Frameworks
    tags:
      - amazon
      - analytics
    bindable: true
    async: optional
    parameters: []
    metadata:
      displayName: "Amazon EMR"
      longDescription: "Amazon EMR provides a managed Hadoop framework that makes it easy, fast, and cost-effective to process vast amounts of data across dynamically scalable Amazon EC2 instances. You can also run other popular distributed frameworks such as Apache Spark, HBase, Presto, and Flink in Amazon EMR, and interact with data in other AWS data stores such as Amazon S3 and Amazon DynamoDB."
      imageUrl: "https://s3.amazonaws.com/fusor/2017demo/Analytics_AmazonEMR.png"
      documentationUrl: "https://aws.amazon.com/emr/"
  - id: 334c6ee4-ed6a-4520-9c1b-b068d8d4a7a7
    name: rds-aurora-apb
    image: ansibleplaybookbundle/rds-aurora-apb
    description: Managed relational database service with a choice of six popular database engines.  Set up, operate, and scale a relational database in the cloud with just a few clicks.
    tags:
      - amazon
      - database
    bindable: true
    async: optional
    parameters: []
    metadata:
      displayName: "Amazon RDS - Aurora"
      longDescription: "Amazon Relational Database Service (Amazon RDS) makes it easy to set up, operate, and scale a relational database in the cloud. It provides cost-efficient and resizable capacity while managing time-consuming database administration tasks, freeing you up to focus on your applications and business. Amazon RDS provides you six familiar database engines to choose from, including Amazon Aurora, PostgreSQL, MySQL, MariaDB, Oracle, and Microsoft SQL Server."
      imageUrl: "https://s3.amazonaws.com/fusor/2017demo/Database_AmazonRDS.png"
      documentationUrl: "https://aws.amazon.com/rds/"
  - id: 202a2432-1d1a-4182-aa35-00402ffc5ee3
    name: rds-mysql-apb
    image: ansibleplaybookbundle/rds-mysql-apb
    description: Managed relational database service with a choice of six popular database engines.  Set up, operate, and scale a relational database in the cloud with just a few clicks.
    tags:
      - amazon
      - database
    bindable: true
    async: optional
    parameters: []
    metadata:
      displayName: "Amazon RDS - MySQL"
      longDescription: "Amazon Relational Database Service (Amazon RDS) makes it easy to set up, operate, and scale a relational database in the cloud. It provides cost-efficient and resizable capacity while managing time-consuming database administration tasks, freeing you up to focus on your applications and business. Amazon RDS provides you six familiar database engines to choose from, including Amazon Aurora, PostgreSQL, MySQL, MariaDB, Oracle, and Microsoft SQL Server."
      imageUrl: "https://s3.amazonaws.com/fusor/2017demo/Database_AmazonRDS_MySQLDBinstance.png"
      documentationUrl: "https://aws.amazon.com/rds/"
  - id: 0aaafc10-132b-41a8-a58c-73268ff1006a
    name: rds-postgres-apb
    image: ansibleplaybookbundle/rds-postgres-apb
    description: Managed relational database service with a choice of six popular database engines.  Set up, operate, and scale a relational database in the cloud with just a few clicks.
    tags:
      - amazon
      - database
    bindable: true
    async: optional
    parameters:
      - name: aws_access_key
        description: aws access key to authenticate to aws with
        type: string
      - name: aws_secret_key
        description: aws secret key to authenticate to aws with
        type: string
      - name: backup_retention
        description: backup retention period
        type: int
        default: 0
      - name: db_engine
        description: database engine
        type: string
        default: postgres
      - name: db_name
        description: name of the database to create
        type: string
        default: testdb
      - name: db_password
        description: master password
        type: string
        default: dbpasswd
      - name: db_size
        description: size of the db in gb
        type: int
        default: 10
      - name: db_username
        description: master db username
        type: string
        default: dbuser
      - name: engine_version
        description: db engine version
        type: string
        default: 9.6.1
      - name: instance_type
        description: aws instance type
        type: string
        default: db.m3.medium
      - name: namespace
        description: Namespace to deploy the cluster to
        type: string
        default: foreman-ansibleapp
      - name: openshift_target
        description: target openshift hosts url
        type: string
      - name: openshift_user
        description: openshift user to authenticate as
        type: string
      - name: openshift_pass
        description: password for the openshift user
        type: string
      - name: port
        description: port the database will listen on
        type: int
        default: 5432
      - name: region
        description: aws region
        type: string
      - name: subnet
        description: vpc subnet to deploy instance on
        type: string
      - name: vpc_security_groups
        description: vpc security groups to assign to the instance
        type: string
    metadata:
      displayName: "Amazon RDS - PostgreSQL"
      longDescription: "Amazon Relational Database Service (Amazon RDS) makes it easy to set up, operate, and scale a relational database in the cloud. It provides cost-efficient and resizable capacity while managing time-consuming database administration tasks, freeing you up to focus on your applications and business. Amazon RDS provides you six familiar database engines to choose from, including Amazon Aurora, PostgreSQL, MySQL, MariaDB, Oracle, and Microsoft SQL Server."
      imageUrl: "https://s3.amazonaws.com/fusor/2017demo/Database_AmazonRDS_PostgreSQLinstance.png"
      documentationUrl: "https://aws.amazon.com/rds/"
  - id: 9ce41143-1c76-4fc1-9828-4fbe2648ee24
    name: redshift-apb
    image: ansibleplaybookbundle/redshift-apb
    description: Fast, simple, cost-effective data warehousing.
    tags:
      - amazon
      - database
    bindable: true
    async: optional
    parameters: []
    metadata:
      displayName: "Amazon Redshift"
      longDescription: "Amazon Redshift is a fast, fully managed, petabyte-scale data warehouse that makes it simple and cost-effective to analyze all your data using your existing business intelligence tools. Start small for $0.25 per hour with no commitments and scale to petabytes for $1,000 per terabyte per year, less than a tenth the cost of traditional solutions. Customers typically see 3x compression, reducing their costs to $333 per uncompressed terabyte per year."
      imageUrl: "https://s3.amazonaws.com/fusor/2017demo/Database_AmazonRedshift.png"
      documentationUrl: "https://aws.amazon.com/redshift/"
  - id: 9e8772a5-73ac-4cab-a089-a167a0d972a5
    name: route53-apb
    image: ansibleplaybookbundle/route53-apb
    description: Highly available and scalable cloud Domain Name System (DNS) web service.
    tags:
      - amazon
      - networking
      - content-delivery
    bindable: true
    async: optional
    parameters: []
    metadata:
      displayName: "Amazon Route53"
      longDescription: "Amazon Route 53 is a highly available and scalable cloud Domain Name System (DNS) web service. It is designed to give developers and businesses an extremely reliable and cost effective way to route end users to Internet applications by translating names like www.example.com into the numeric IP addresses like 192.0.2.1 that computers use to connect to each other. Amazon Route 53 is fully compliant with IPv6 as well."
      imageUrl: "https://s3.amazonaws.com/fusor/2017demo/NetworkingContentDelivery_AmazonRoute53.png"
      documentationUrl: "https://aws.amazon.com/route53/"
  - id: 64297e88-657c-46ab-bb50-2af7f84e5ec5
    name: postgresql-demo-apb
    image: ansibleplaybookbundle/postgresql-demo-apb
    description: PostgreSQL apb implementation
    bindable: true
    async: optional
    metadata:
      displayName: "Postgresql demo"
      longDescription: "An apb demo that deploys postgresql and loads it with sample data"
      imageUrl: "https://s3.amazonaws.com/fusor/2017demo/64px-Postgresql_elephant.svg.png"
      documentationUrl: "https://www.postgresql.org/docs/"
    parameters:
      - name: namespace
        description: Namespace to deploy the cluster to
        type: string
        default: postgresql-demo-apb
      - name: postgresql_database
        description: postgresql database name
        type: string
        default: admin
      - name: postgresql_password
        description: postgresql database password
        type: string
        default: admin
      - name: postgresql_user
        description: postgresql database username
        type: string
        default: admin
  - id: b4325aea-0479-4f8d-b502-1922bbaee13e
    name: manageiq-apb
    image: ansibleplaybookbundle/manageiq-apb
    description: "ManageIQ is an open source management platform for Hybrid IT."
    bindable: false
    async: optional
    parameters:
      - name: application_init_delay
        description: Time to delay web app startup
        type: int
        default: 60
      - name: database_region
        description: MIQ Instance Region
        type: int
        default: 1
      - name: database_service_name
        description: Service Name for the database
        type: string
        default: manageiq-postgresql
      - name: memcached_max_connections
        description: Maximum number of connections memcached will accept
        type: int
        default: 1024
      - name: memcached_max_memory
        description: Maximum memory memcached will use in MB
        type: int
        default: 64
      - name: memcached_slab_page_size
        description: Memcached Slab Size in bytes
        type: string
        default: 1M
      - name: memcached_service_name
        description: Service name of the memcached instance to use
        type: string
        default: manageiq-memcached
      - name: namespace
        description: Namespace to deploy the cluster to
        type: string
        default: manageiq-apb
      - name: postgresql_database
        description: postgresql database name
        type: string
        default: vmdb_production
      - name: postgresql_password
        description: postgresql database password
        type: string
        default: admin
      - name: postgresql_user
        description: postgresql database username
        type: string
        default: admin
    metadata:
      displayName: "ManageIQ"
      imageUrl: "https://s3.amazonaws.com/fusor/2017demo/ManageIQ.png"
      documentationUrl: "https://manageiq.org/docs/"
      longDescription: "ManageIQ is an open source management platform for Hybrid IT. It can manage small and large environments, and supports multiple technologies such as virtual machines, public clouds and containers."
